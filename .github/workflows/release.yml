name: goreleaser

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5.0.0
        with:
          distribution: goreleaser
          version: ${{ env.GITHUB_REF_NAME }}
          args: release --clean
          workdir: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - 
        name: Create npm packages
        run: |
          set -euo pipefail
          
          VERSION=${GITHUB_REF_NAME#v}
          echo "Creating npm packages for version: $VERSION"
          
          chmod +x ./scripts/create-npm-packages.sh
          ./scripts/create-npm-packages.sh "$VERSION"

      - name: Publish platform-specific packages to npm
        run: |
          set -euo pipefail
          
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          
          for platform_dir in platform-packages/go-blueprint-*; do
            if [ -d "$platform_dir" ]; then
              echo "Publishing $(basename $platform_dir)..."
              cd "$platform_dir"
              npm publish --access public
              cd - > /dev/null
            fi
          done
          
          echo "Waiting for npm to propagate platform packages..."
          sleep 30
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish main package to npm
        run: |
          set -euo pipefail
          
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          
          cd npm-package
          echo "Publishing main go-blueprint package..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}